-- if true then
--   return {}
-- end
local i = 0
return {
  -- {
  --   "folke/noice.nvim",
  --   keys = {
  --     { "<c-f>", false, mode = { "i", "n", "s" } },
  --     { "<c-b>", false, mode = { "i", "n", "s" } },
  --   },
  -- },
  -- {
  --   "folke/tokyonight.nvim",
  --   lazy = false,
  --   priority = 1000,
  --   config = function()
  --     i = i + 1
  --     dd("color" .. i)
  --     require("tokyonight").setup()
  --     vim.cmd.colorscheme("tokyonight")
  --     vim.api.nvim_set_hl(0, "Normal", { bg = "#000000" })
  --   end,
  -- },
  -- {
  --   "echasnovski/mini.surround",
  --   opts = {
  --     mappings = {
  --       add = "sa",
  --       delete = "sd",
  --       find = "sf",
  --       find_left = "sF",
  --       highlight = "sh",
  --       replace = "sr",
  --       update_n_lines = "sn",
  --     },
  --   },
  -- },
  -- {
  --   "neovim/nvim-lspconfig",
  --   opts = {
  --     diagnostics = {
  --       update_in_insert = true,
  --     },
  --   },
  -- },
  -- {
  --   "akinsho/bufferline.nvim",
  --   event = "VeryLazy",
  --   opts = function()
  --     return {
  --       options = {
  --         always_show_bufferline = true,
  --       },
  --     }
  --   end,
  -- },
  -- {
  --   "folke/tokyonight.nvim",
  --   opts = {
  --     transparent = true,
  --     styles = {
  --       sidebars = "transparent",
  --       floats = "transparent",
  --     },
  --   },
  -- },
  -- {
  --   "rcarriga/nvim-notify",
  --   opts = {
  --     background_colour = "#000000", -- doesn't work
  --   },
  -- },
  -- { "stevearc/dressing.nvim", enabled = false },
  -- { "rcarriga/nvim-notify", enabled = false },
  -- { "folke/noice.nvim", enabled = false },
  -- { "akinsho/bufferline.nvim", enabled = false },
  --
  -- {
  --   "romgrk/barbar.nvim",
  --   config = true,
  -- },
  -- { "ggandor/flit.nvim", enabled = false },
  -- {
  --   "unblevable/quick-scope",
  --   lazy = false,
  --   init = function()
  --     vim.g.qs_highlight_on_keys = { "f", "F", "t", "T" }
  --   end,
  -- },
  --
  -- {
  --   "wookayin/semshi",
  --   build = ":UpdateRemotePlugins",
  -- },
}
